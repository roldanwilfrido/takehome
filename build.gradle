plugins {
	id "org.springframework.boot" version "3.0.1"
	id "io.spring.dependency-management" version "1.1.0"
	id "java"
}

group = "com.example"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "17"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-devtools"

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.2'

	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.6.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation "org.springframework.boot:spring-boot-starter-test"

	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named("test") {
	useJUnitPlatform()
	finalizedBy bootJar
}

apply plugin: 'jacoco'
jacocoTestReport {
	dependsOn jacocoTestCoverageVerification

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/example/takehome/configurations/*",
					"com/example/takehome/domain/*",
					"com/example/takehome/repositories/**"
			])
		}))
	}

	reports {
		xml.enabled true
		html.enabled true
	}
}

jacocoTestCoverageVerification {
	dependsOn test

	enabled = true
	violationRules {
		rule {
			excludes = [
					'com.example.takehome.configurations.*',
					'com.example.takehome.domain.*',
					'com.example.takehome.repositories.*'
			]
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.8
			}
		}
	}
}

